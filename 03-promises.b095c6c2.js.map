{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAChCG,EAAmBJ,SAASC,cAAc,yBAEhD,SAASI,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUQ,MAAAP,IAGpBG,EAAO,CAAEJ,WAAUQ,MAAAP,G,GAEpBA,E,IAIPH,EAAiBW,UAAW,EAC5BX,EAAiBY,iBAAiB,SAAS,SAAAC,GACzCb,EAAiBW,UAAW,EAC5BE,EAAEC,iBAIF,IAHA,IAAIC,EAAaC,OAAOrB,EAAMsB,OAC1BC,EAAYF,OAAOlB,EAAKmB,OAEnBE,EAAI,EAAGA,EAAIpB,EAAOkB,MAAOE,GAAK,EACrClB,EAAc,EAAIkB,EAAGJ,EAAaI,EAAID,GACnCE,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUoB,EAAKD,EAALX,MACjBa,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGnB,EAAQmB,EAARnB,SAAU0B,EAAKP,EAALX,MAClBa,EAAA9B,GAAS+B,OAAOK,QACd,sBAAqCH,OAAfxB,EAAS,QAAYwB,OAANE,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btnCreatePromise = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\nbtnCreatePromise.disabled = false;\nbtnCreatePromise.addEventListener('click', e => {\n  btnCreatePromise.disabled = true;\n  e.preventDefault();\n  let firstDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n  \n  for (let i = 0; i < amount.value; i += 1) {\n    createPromise(1 + i, firstDelay + i * delayStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$btnCreatePromise","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","delay","disabled","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.b095c6c2.js.map"}